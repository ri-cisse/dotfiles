---
- block:
    - name: setup
      include_vars: "{{ item }}"
      with_first_found:
        - "roles/vim/vars/{{ ansible_distribution }}.yml"
        - "roles/vim/vars/{{ ansible_os_family }}.yml"
        - roles/vim/vars/default.yml
  tags: always

#####=== install ===#####

- block:
    - name: ubuntu/debian | setup
      apt_repository: repo='ppa:neovim-ppa/unstable' state=present
      become: yes
      when: ansible_os_family == 'Debian'

    - name: package | neovim
      package: name={{ neovim_name }} state={{ neovim_install_state }}
      become: yes
      when: ansible_os_family == 'Debian'
  tags:
    - install
    - ubuntu

- block:
   - name: pip2 | neovim
     pip: name="{{ python2_packages_to_install | join(' ') }}" executable={{ pip2_name }} state={{ neovim_install_state }} extra_args="--upgrade"

   - name: pip3 | neovim
     pip: name="{{ python3_packages_to_install | join(' ') }}" executable={{ pip3_name }} state={{ neovim_install_state }} extra_args="--user --upgrade"
  ignore_errors: yes # these packages are not very essential and they are error prone
  tags:
    - install
    - neovim-python

#####=== configure ===#####

- name: vim | create backup directory
  file: path=~/.backups state=directory

- name: vim | make sure {{ xdg_config_home }} exists
  file: path={{ xdg_config_home }} state=directory

- name: vim | check for non-symlink neovim config directory
  command: test -e {{ neovim_config_dir }} -a ! -L {{ neovim_config_dir }}
  failed_when: neovim_config_dir_check.rc > 1
  register: neovim_config_dir_check
  changed_when: false

- name: vim | backup original neovim config directory
  command:
    mv {{ neovim_config_dir }} ~/.backups/
    creates=~/.backups/{{ neovim_config_dir | basename }}
    removes={{ neovim_config_dir }}
  when: neovim_config_dir_check.rc == 0 # item exists and is not a symlink

- name: install | link config folder
  file:
    src="{{ vim_config_dir }}"
    path="{{ neovim_config_dir }}"
    state=link
    force=yes

- name: vim | create or update spell file
  command:
    vim -u NONE -N -c 'mkspell! {{ spellfile }} | quit'
    creates={{ spellfile }}.spl
